//
// ****************************************************************************
// * Copyright (C) 2018, International Business Machines Corporation          *
// * All rights reserved.                                                     *
// ****************************************************************************
//

namespace com.ibm.streamsx.objectstorage.test;

use com.ibm.streamsx.objectstorage::*;

composite ObjectStorageSink_consistent_region {

	param
		expression<rstring> $credentials: getSubmissionTimeValue("os-credentials", "");
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("os-uri");
		expression<rstring> $endpoint : getSubmissionTimeValue("os-endpoint", "s3.us.cloud-object-storage.appdomain.cloud");

	graph

		stream<rstring result> CRTest = SinkTestConsistentRegionIAMComp() {
			param
				credentials: $credentials;
				objectStorageURI: $objectStorageURI;
				endpoint: $endpoint;
		}
}

@threading(model=manual)
public composite SinkTestConsistentRegionIAMComp (output CRResult) {
	param
		expression<rstring> $credentials: "";
		expression<rstring> $objectStorageURI;
		expression<rstring> $endpoint : "s3.us.cloud-object-storage.appdomain.cloud";

	graph

		/**
		 * An application with a consistent region requires the
		 * job control plane.
		 */
		() as JCP = JobControlPlane() {}

		@consistent(trigger=periodic, period=6.0)
		stream<rstring dummy> Triggers as O = Beacon()
		{
			param period: 0.2;
		}

		stream<rstring data> Data = Custom(Triggers as I) {
			logic
			onTuple I: {
				submit ({data="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}, Data);
			}
		}

		stream<rstring objectName, uint64 objectSize> ObjStSink1 = ObjectStorageSink(Data) { 
			param
				credentials: $credentials;
				objectStorageURI: $objectStorageURI;								
				endpoint : $endpoint;
				objectName: "test_data_%OBJECTNUM";
		}

		(stream<rstring result> CRResult) as ResScan = Custom(ObjStSink1 as I) {
			logic
			onTuple I: {
				println(I);
				submit ({result="ok"}, CRResult);
			}
		}

}


