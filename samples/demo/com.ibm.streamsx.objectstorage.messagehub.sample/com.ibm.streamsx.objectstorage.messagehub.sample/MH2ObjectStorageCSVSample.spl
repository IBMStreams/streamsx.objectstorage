namespace com.ibm.streamsx.objectstorage.messagehub.sample;

use com.ibm.streamsx.objectstorage::*;


type DataHistorianData_t = 
    	rstring id,
    	rstring tz,
    	rstring dateutc,
    	float64 latitude,
    	float64 longitude,
    	float64 temperature,
    	float64 baromin,
    	float64 humidity,
    	float64 rainin,
    	rstring time_stamp;
    	
public composite MH2ObjectStorageCSVSample {
	
	param
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("objectStorageURI");  
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("userID"); 
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("password");
		expression<rstring> $objectStorageProjectID: getSubmissionTimeValue("projectID");
		expression<rstring> $objectName: getSubmissionTimeValue("objectName", "testOS_%OBJECTNUM.txt"); 
		expression<float64> $timePerObject: (float64)getSubmissionTimeValue("timePerObject", "90.0");
		//expression<rstring> $endpoint: getSubmissionTimeValue("endpoint", "s3.us-south.objectstorage.softlayer.net");
		expression<rstring> $endpoint: getSubmissionTimeValue("endpoint", "s3-api.us-geo.objectstorage.softlayer.net");		
		expression<rstring> $storageFormat: getSubmissionTimeValue("storageFormat", "parquet");
	
	

    graph
     
//     stream<rstring content> MessageHubData = com.ibm.streamsx.messagehub::MessageHubConsumer()
//        {
//            param
//                messageHubCredentialsFile : "etc/messagehub.conf";
//				propertiesFile:"etc/consumer.properties";
//                outputMessageAttributeName : "content";
//                topic : "DataHistorianOSTest";
//        }
     

		stream<DataHistorianData_t> MessageHubData = Beacon()  {
			//param
			//	iterations: 1000000;
		}
		
		         
		stream<blob message> MessageHubDataBlob = Format(MessageHubData)
        {
            param
                format		 : csv;
            output
                MessageHubDataBlob :
                    message = Output();
        }

     	
     	() as OSSink1 = ObjectStorageSink(MessageHubDataBlob) {
         param
                //objectStorageURI : $objectStorageURI;
                objectStorageURI : "s3a://ap-geofence-perf/";
                //objectStorageURI : "cos://ap-geofence-perf/";
				IAMApiKey: "x2WDID-isOi8bYYwsKt5ZE9RZZHcMfVXQqmmpfYcPCe-"; 
				IAMServiceInstanceId: "396f3af4-a99d-4e19-9469-a48e5b442caf";
				IAMTokenEndpoint: "https://iam.ng.bluemix.net/oidc/token";
				objectName : $objectName;
				endpoint : $endpoint;				
				//dataAttribute: latitude;
				tuplesPerObject: 1000000l;
				//timePerObject: 60.0;
				//bytesPerObject: 10l * 1024l;
				//storageFormat: $storageFormat;	
				storageFormat: "csv";	
				//vmArg: "-Xmx1024m -Xmn512m";
//	     	config
//	     		placement: partitionIsolation;
	     }
		
}

public composite MHDataProducer {

	graph
	
		stream<DataHistorianData_t> MHData = Beacon()  {
		            param iterations: 1000000;
        }
		
		stream<rstring message> MHMessage = TupleToJSON(MHData) {}
		
		
		() as MHProducer = com.ibm.streamsx.messagehub::MessageHubProducer(MHMessage)
        {
            param
                messageHubCredentialsFile : "etc/messagehub.conf";
                topic : "DataHistorianOSTest";                
        }
		

}

