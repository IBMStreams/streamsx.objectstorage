/*
** Copyright (C) 2018  International Business Machines Corporation
** All Rights Reserved
*/
namespace com.ibm.streamsx.objectstorage.sample;

use com.ibm.streamsx.objectstorage::*;

/**
 * This sample application demonstrates how to use the ObjectStorageSink operator with dynamic object name and close on Window marker
 * 
 * Additional purpose of the sample is to demonstrate how to configure the operators and functions with basic (HMAC) authentication.
 *
 * @param accessKeyID
 * Object storage access key ID
 * 
 * @param secretAccessKey
 * Object storage secret access key
 * 
 * @param endpoint
 * Optional parameter to set an endpoint to connect to COS, default: s3.us.cloud-object-storage.appdomain.cloud
 * \- Example endpoint for local MinIO server: 127.0.0.1:9000
 *
 * @param objectStorageURI 
 * Set a bucket name and protocol in URI in 'cos://bucket/' or 's3a://bucket/' format
 *
 * @param sslEnabled
 * Optional parameter to configure the connection to S3, default is SSL enabled and HTTPS is used.
 */
public composite DynamicObjectNameSinkSample {
	param
		expression<rstring> $accessKeyID : getSubmissionTimeValue("os-access-key-id");
		expression<rstring> $secretAccessKey : getSubmissionTimeValue("os-secret-access-key");
		expression<rstring> $endpoint : getSubmissionTimeValue("os-endpoint", "s3.us.cloud-object-storage.appdomain.cloud");
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("os-uri");
		expression<boolean> $sslEnabled: (boolean) getSubmissionTimeValue("sslEnabled", "true");

	graph

		stream<rstring result> SampleRes = DynamicObjectNameSinkSampleBasic() {
			param
				accessKeyID: $accessKeyID;
				secretAccessKey: $secretAccessKey;
				objectStorageURI: $objectStorageURI;
				endpoint: $endpoint;
				sslEnabled: $sslEnabled;
		}	
}

/**
 * Composite used by DynamicObjectNameSinkSample main composite and test application
 *
 * @param accessKeyID
 * Object storage access key ID
 * 
 * @param secretAccessKey
 * Object storage secret access key
 * 
 * @param endpoint
 * Optional parameter to set an endpoint to connect to COS, default: s3.us.cloud-object-storage.appdomain.cloud
 * \- Example endpoint for local MinIO server: 127.0.0.1:9000
 *
 * @param objectStorageURI 
 * Set a bucket name and protocol in URI in 'cos://bucket/' or 's3a://bucket/' format
 *
 * @param sslEnabled
 * Optional parameter to configure the connection to S3, default is SSL enabled and HTTPS is used.
 *
 * @output SampleResult
 * This stream is evaluated by the tester.
 */
public composite DynamicObjectNameSinkSampleBasic (output SampleResult) {
	param
		expression<rstring> $accessKeyID;
		expression<rstring> $secretAccessKey;
		expression<rstring> $objectStorageURI;
		expression<rstring> $endpoint: "s3.us.cloud-object-storage.appdomain.cloud";
		expression<boolean> $sslEnabled: true;

	graph
		
		stream<rstring line> Data = FileSource() {
			param
				file : getThisToolkitDir()+"/etc/input.txt";
				format: line;
				initDelay: 5.0;
		}

		(stream<rstring objectName, rstring data> DataWithName;
		stream<rstring result> SampleResult) as KeySetter = Custom(Data as I)  {
			logic
			onTuple I: {
				// object key is set here and object value is forwarded
				submit ({objectName="sample.txt", data=I.line}, DataWithName);
			}
			onPunct I: {
				if(currentPunct() == Sys.FinalMarker) {
					submit ({result="ok"}, SampleResult);
				}
			}
		}
		
		() as OSink = ObjectStorageSink(DataWithName) {
			param
				objectStorageURI: $objectStorageURI;
				objectStorageUser: $accessKeyID;
				objectStoragePassword: $secretAccessKey;
				endpoint: $endpoint;								
				objectNameAttribute: objectName;
				sslEnabled: $sslEnabled;
  		}

}
