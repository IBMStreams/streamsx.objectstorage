/*
** Copyright (C) 2018  International Business Machines Corporation
** All Rights Reserved
*/
namespace com.ibm.streamsx.objectstorage.sample;

use com.ibm.streamsx.objectstorage::*;

/**
 * The sample demonstrates object creation, scanning and reading.
 * 
 * Additional purpose of the sample is to demonstrate how to configure the operators and functions with basic (HMAC) authentication.
 *
 * @param accessKeyID
 * Object storage access key ID
 * 
 * @param secretAccessKey
 * Object storage secret access key
 * 
 * @param endpoint
 * Optional parameter to set an endpoint to connect to COS, default: s3-api.us-geo.objectstorage.softlayer.net
 *
 * @param objectStorageURI 
 * Set a bucket name and protocol in URI in 'cos://bucket/' or 's3a://bucket/' format
 */
public composite SinkScanSourceSample {

	param
		expression<rstring> $accessKeyID : getSubmissionTimeValue("os-access-key-id");
		expression<rstring> $secretAccessKey : getSubmissionTimeValue("os-secret-access-key");
		expression<rstring> $endpoint : getSubmissionTimeValue("os-endpoint", "s3-api.us-geo.objectstorage.softlayer.net");
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("os-uri");

	graph

		stream<rstring result> SampleRes = SinkScanSourceSampleBasic() {
			param
				accessKeyID: $accessKeyID;
				secretAccessKey: $secretAccessKey;
				objectStorageURI: $objectStorageURI;
				endpoint: $endpoint;
		}	
}

/**
 * Composite used by SinkScanSourceSample main composite and test application
 *
 * @param accessKeyID
 * Object storage access key ID
 * 
 * @param secretAccessKey
 * Object storage secret access key
 * 
 * @param endpoint
 * Optional parameter to set an endpoint to connect to COS, default: s3-api.us-geo.objectstorage.softlayer.net
 *
 * @param objectStorageURI 
 * Set a bucket name and protocol in URI in 'cos://bucket/' or 's3a://bucket/' format
 * 
 * @output SampleResult
 * This stream is evaluated by the tester.
 */
public composite SinkScanSourceSampleBasic (output SampleResult) {
	param
		expression<rstring> $accessKeyID;
		expression<rstring> $secretAccessKey;
		expression<rstring> $objectStorageURI;
		expression<rstring> $endpoint: "s3-api.us-geo.objectstorage.softlayer.net";
	
	graph
	
		stream<rstring line> Data = Beacon() {
			param
				iterations: 300000;
			output
				Data : line  = "Line " +(rstring) IterationCount();
		}
				
		stream<rstring objectname, uint64 size> ObjectMetaData = ObjectStorageSink(Data) {
			param
				objectStorageURI : $objectStorageURI;
				objectStorageUser : $accessKeyID;
				objectStoragePassword : $secretAccessKey;
				endpoint : $endpoint;
				objectName : "SAMPLE_%OBJECTNUM.ascii.text";
				bytesPerObject: 1024l;
  		}
		
		() as objectMetadataSink = Custom(ObjectMetaData) {
			logic
			onTuple ObjectMetaData: {
				printStringLn("Object with name '" + objectname + "' of size '" + (rstring)size + "' has been created.");		                    
			}
		}

		stream<rstring objectname> ObjectNames = ObjectStorageScan() {
			param
				objectStorageURI : $objectStorageURI;
				objectStorageUser : $accessKeyID;
				objectStoragePassword : $secretAccessKey;
				endpoint : $endpoint;
				pattern: "SAMPLE_[0-9]*\\.ascii\\.text$";
				directory: "/";
  		}
		
		stream<rstring data> ObjectData = ObjectStorageSource(ObjectNames) {
			param
				objectStorageURI : $objectStorageURI;
				objectStorageUser : $accessKeyID;
				objectStoragePassword : $secretAccessKey;
				endpoint : $endpoint;
		}
		
		stream<rstring result> SampleResult = Custom(ObjectData) {
			logic
			onTuple ObjectData: {
				printStringLn("read: "+data);
				submit ({result="ok"}, SampleResult);
			}
		}

}
