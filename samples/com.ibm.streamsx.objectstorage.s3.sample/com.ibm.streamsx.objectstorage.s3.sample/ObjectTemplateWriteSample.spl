namespace com.ibm.streamsx.objectstorage.s3.sample;

use com.ibm.streamsx.objectstorage.s3::S3ObjectStorageSink;

public composite ObjectTemplateWriteSample {
	
	param
		expression<rstring> $accessKeyID : getSubmissionTimeValue("ObjectStorage-AccessKeyID");
		expression<rstring> $secretAccessKey : getSubmissionTimeValue("ObjectStorage-SecretAccessKey");
		expression<rstring> $endpoint : getSubmissionTimeValue("ObjectStorage-Endpoint", "s3-api.us-geo.objectstorage.softlayer.net");
		expression<rstring> $bucket : getSubmissionTimeValue("ObjectStorage-Bucket", "streams-sample");
		expression<boolean> $cleanup : (boolean)getSubmissionTimeValue("cleanup", "false");
		expression<rstring> $outFileName: getSubmissionTimeValue("outFileName", "output_%TIME.txt");


	graph
		
		stream<rstring line> Data = FileSource() {
		            param
		                file : getThisToolkitDir()+"/etc/input.txt";
		                format: line;
		                initDelay: 5.0;
		        }
		
		
		stream<rstring filename, uint64 size> FileData = S3ObjectStorageSink(Data) {
			param
				accessKeyID : $accessKeyID;
				secretAccessKey : $secretAccessKey; 
				endpoint : $endpoint;
				bucket : $bucket;
				protocol: s3d;
				objectName: $outFileName;
				bytesPerObject: 20l;
				timeFormat: "yyyy-MM-dd'T'HHmmss";		
  		}
		
		() as opInstanceNameSink = Custom(FileData)  {
		            logic
		                onTuple FileData: {
		                    printStringLn("File with name '" + filename + "' of size '" + (rstring)size + "' has been created.");		                    
		                }
		        }
		       
}


