namespace com.ibm.streamsx.objectstorage.swift.sample;


use com.ibm.streamsx.objectstorage.swift::SwiftObjectStorageSink;

public composite ObjectWriteSample {

	param
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("os-user");
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("os-password");
		expression<rstring> $objectStorageProjectID: getSubmissionTimeValue("os-project-id");
		expression<rstring> $objectStorageServiceName: getSubmissionTimeValue("os-service-name");
		expression<rstring> $container: getSubmissionTimeValue("os-container", "swift-test");
		expression<rstring> $objectName: getSubmissionTimeValue("os-objectname", "output_%TIME.txt");
		expression<rstring> $accessPoint: getSubmissionTimeValue("os-accesspoint", "dal.objectstorage.open.softlayer.com");
		
	graph
		
		stream<rstring line> Data = FileSource() {
	            param
	                file : getThisToolkitDir()+"/etc/input.txt";
	                format: line;
	                initDelay: 5.0;
	        }
	
		
		
		stream<rstring objectName, uint64 size> ObjectData = SwiftObjectStorageSink(Data) {
			param				
				userID: $objectStorageUser;
				password: $objectStoragePassword;
				projectID: $objectStorageProjectID;
				serviceName: $objectStorageServiceName;
				accessPoint: $accessPoint;
				container: $container;
				objectName : "output_%TIME.txt" ;
				closeOnPunct: true;
  		}
		
		() as opInstanceNameSink = Custom(ObjectData)  {
		            logic
		                onTuple ObjectData: {
		                    printStringLn("Object with name '" + objectName + "' of size '" + (rstring)size + "' has been created.");		                    
		                }
		        }
		       
}


