namespace com.ibm.streamsx.objectstorage.swift.sample;


use com.ibm.streamsx.objectstorage.swift::SwiftObjectStorageSink;

public composite CreateObjectSample {

	param
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("os-user");
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("os-password");
		expression<rstring> $objectStorageProjectID: getSubmissionTimeValue("os-project-id");
		
		expression<rstring> $container: getSubmissionTimeValue("os-container", "swift-test");
		expression<rstring> $objectName: getSubmissionTimeValue("os-objectname", "output_%TIME.txt");
		expression<rstring> $accessPoint: getSubmissionTimeValue("os-accesspoint", "dal.objectstorage.open.softlayer.com");
		
	graph
		
		stream<rstring objectName, rstring line> Data as O = Custom() {
			logic
			onProcess: {
				submit({objectName="xx",line="This is the first line."}, O);
				submit({objectName="xx",line="Second line."}, O);
				submit({objectName="xx",line="This is the last line."}, O);
			}
		}		
		
		stream<rstring objectName, uint64 size> ObjectData = SwiftObjectStorageSink(Data) {
			param				
				userID: $objectStorageUser;
				password: $objectStoragePassword;
				projectID: $objectStorageProjectID;
				accessPoint: $accessPoint;
				container: $container;
				objectNameAttribute: objectName;
				closeOnPunct: true;
  		}
		
		() as Sink1 = Custom(ObjectData)  {
			logic
			onTuple ObjectData: {
				printStringLn("Object with name '" + objectName + "' of size '" + (rstring)size + "' has been created.");		                    
			}
		}

}


