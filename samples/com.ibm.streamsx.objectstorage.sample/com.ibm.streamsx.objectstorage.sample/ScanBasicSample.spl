namespace com.ibm.streamsx.objectstorage.sample;

use com.ibm.streamsx.objectstorage::*;

public composite ScanBasicSample {

	param
		expression<rstring> $objectStorageURI: "s3d://streams-test-bucket-us.service/"; 
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("userID");
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("password");
		expression<rstring> $endpoint: "s3.amazonaws.com";


	graph
	
		stream<rstring line> Data = FileSource() {
		            param
		                file : getThisToolkitDir()+"/etc/input.txt";
		                format: line;
		                initDelay: 2.0;
		        }
		
		
		stream<rstring objectname, uint64 size> ObjectMetaData = ObjectStorageSink(Data) {
			param
				objectStorageURI: $objectStorageURI;				
    			objectStorageUser:  $objectStorageUser;
    			objectStoragePassword: $objectStoragePassword;
    			endpoint: $endpoint;
				objectName : "output_%TIME.txt" ;
				bytesPerObject: 600l;
  		}
		
		() as objectMetadataSink = Custom(ObjectMetaData)  {
		            logic
		                onTuple ObjectMetaData: {
		                    printStringLn("File with name '" + objectname + "' of size '" + (rstring)size + "' has been created.");		                    
		                }
		}
		
		stream<rstring objectname> ObjectNames = ObjectStorageScan() {
			param
				objectStorageURI: $objectStorageURI;				
    			objectStorageUser:  $objectStorageUser;
    			objectStoragePassword: $objectStoragePassword;
    			endpoint: $endpoint;
				pattern: ".*\\.txt$";
				directory: "/";	
				initDelay: 5.0;			
  		}
		
		stream<rstring line> ObjectData = ObjectStorageSource(ObjectNames) {
			param
				objectStorageURI: $objectStorageURI;				
    			objectStorageUser:  $objectStorageUser;
    			objectStoragePassword: $objectStoragePassword;
    			endpoint: $endpoint;				
  		}
		
		() as objectDataSink = Custom(ObjectData)  {
		            logic
		            	state: {
		            		mutable int32 count = 0;
		            	}
		                onTuple ObjectData: {
		                    printStringLn("Line [" + (rstring)(count++) + "]: "  + line);		                    
		                }
		                onPunct ObjectData: {
							if (currentPunct() == Sys.WindowMarker) {
		                		printStringLn("File read completed.");
		                	}
		                
		                }
		        }   
		
}
