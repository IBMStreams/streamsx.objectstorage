namespace com.ibm.streamsx.objectstorage.sample;

use com.ibm.streamsx.objectstorage::*;

/**
 * This sample application demonstrate how to use the ObjectStorageScan, ObjectStorageSink and ObjectStorageSource operators
 */
public composite ScanSample {

	param
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("uri", "s3a://streams-test-bucket-us.service/");
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("userID");
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("password");
		expression<rstring> $objectStorageProjectID: getSubmissionTimeValue("projectID", "");
		expression<rstring> $endpoint: getSubmissionTimeValue("endpoint", "s3-api.us-geo.objectstorage.softlayer.net");

	graph
	
		stream<rstring line> Data = FileSource() {
			param
				file : getThisToolkitDir()+"/etc/input.txt";
				format: line;
				initDelay: 2.0;
		}
		
		stream<rstring objectname, uint64 size> ObjectMetaData = ObjectStorageSink(Data) {
			param
				objectStorageURI: $objectStorageURI;
				objectStorageUser:  $objectStorageUser;
				objectStoragePassword: $objectStoragePassword;
				objectStorageProjectID: $objectStorageProjectID;
				endpoint: $endpoint;
				objectName : "output_%TIME.txt" ;
				bytesPerObject: 600l;
  		}
		
		() as objectMetadataSink = Custom(ObjectMetaData)  {
			logic
			onTuple ObjectMetaData: {
				printStringLn("File with name '" + objectname + "' of size '" + (rstring)size + "' has been created.");		                    
			}
		}
		
		stream<rstring objectname> ObjectNames = ObjectStorageScan() {
			param
				objectStorageURI: $objectStorageURI;
				objectStorageUser:  $objectStorageUser;
				objectStoragePassword: $objectStoragePassword;
				objectStorageProjectID: $objectStorageProjectID;
				endpoint: $endpoint;
				pattern: ".*\\.txt$";
				directory: "/";
				initDelay: 5.0;
  		}
		
		stream<rstring line> ObjectData = ObjectStorageSource(ObjectNames) {
			param
				objectStorageURI: $objectStorageURI;
				objectStorageUser:  $objectStorageUser;
				objectStoragePassword: $objectStoragePassword;
				objectStorageProjectID: $objectStorageProjectID;
				endpoint: $endpoint;
  		}
		
		() as objectDataSink = Custom(ObjectData)  {
			logic
			state: {
				mutable int32 count = 0;
			}
			onTuple ObjectData: {
				printStringLn("Line [" + (rstring)(count++) + "]: "  + line);		                    
			}
			onPunct ObjectData: {
				if (currentPunct() == Sys.WindowMarker) {
					printStringLn("File read completed.");
				}
			}
		}   

}
