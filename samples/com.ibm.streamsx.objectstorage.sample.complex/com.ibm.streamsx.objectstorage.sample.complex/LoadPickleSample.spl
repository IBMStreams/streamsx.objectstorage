namespace com.ibm.streamsx.objectstorage.sample.complex;

use com.ibm.streamsx.objectstorage::*;

public composite LoadPickleSample {

	param
		expression<rstring> $objectStorageURI: getSubmissionTimeValue("uri"); 
		expression<rstring> $objectStorageUser: getSubmissionTimeValue("userID");
		expression<rstring> $objectStoragePassword: getSubmissionTimeValue("password");
		expression<rstring> $endpoint: getSubmissionTimeValue("endpoint", "s3-api.us-geo.objectstorage.softlayer.net");


	graph
	
		stream<rstring objectname> ObjectNames = ObjectStorageScan() {
			param
				objectStorageURI: $objectStorageURI;				
				objectStorageUser:  $objectStorageUser;
				objectStoragePassword: $objectStoragePassword;
				endpoint: $endpoint;
				pattern: "LDA_100k_[0-9]*\\.model\\.pickle$";
				directory: "/";	
				initDelay: 5.0;			
		}
		
		stream<blob block> ObjectData = ObjectStorageSource(ObjectNames) {
			param
				objectStorageURI: $objectStorageURI;				
				objectStorageUser:  $objectStorageUser;
				objectStoragePassword: $objectStoragePassword;
				endpoint: $endpoint;
				blockSize: 0; // loads file as a single tuple				
		}
		
		() as objectDataSink = Custom(ObjectData) {
			logic
			state: {
				mutable int32 count = 0;
			}
			onTuple ObjectData: {
				count++;
			}
			onPunct ObjectData: {
				if (currentPunct() == Sys.WindowMarker) {
					printStringLn("File read completed.");
				}
			}
		}
		
}
